<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lifemanlab.shop.modules.member.MemberMapper">

    <resultMap id="resultMapObj" type="com.lifemanlab.shop.modules.member.Member"></resultMap>
	
	<sql id ="selectCommon">
		FROM member a
		WHERE 1=1
			<if test="shDelNy != null and !shDelNy.equals('')">AND mmDelNy = #{shDelNy}</if>
			<choose>
				<when test="shOption == 1">AND mmName LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 2">AND mmRank LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 3">AND mmEmail LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 4">AND mmNickname LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 5">AND mmPw LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 6">AND mmJob LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 7">AND mmGender LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 8">AND mmInterest LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 9">AND mmBod LIKE CONCAT('%',#{shValue},'%')</when>
				<when test="shOption == 10">AND mmAddress1 LIKE CONCAT('%',#{shValue},'%')</when>
			</choose>
	</sql>
	
	<select id="selectList" resultMap="resultMapObj">
		<include refid="Base.selectListUpperForMysql" />
			SELECT
				a.mmSeq
				,a.mmName
				,a.mmRank
				,a.mmEmail
				,a.mmNickname
				,a.mmPw
				,a.mmJob
				,a.mmGender
				,a.mmBod
				,a.mmAddress1
				,a.mmInterest
				<!-- ,(select count(aa.ccSeq) from code aa where 1=1 and aa.ccDelNy = 0 and aa.codeGroup_ccgSeq = b.ccgSeq) as ccCount -->
				<!-- <include refid="Base.selectRegModWithAlies" /> -->
			<include refid="selectCommon" />
			ORDER BY a.mmSeq DESC
			<!-- <include refid="Base.orderByLimitForMysql" /> -->
		<include refid="Base.selectListLowerForMysql" />
	</select>
	
	<select id="selectOneCount" resultType="Integer">
		SELECT COUNT(*)
		<include refid="selectCommon" />
	</select>
	
	<select id="selectOne" resultMap="resultMapObj">
		SELECT
			a.*
		FROM member a
		WHERE 1=1
			AND mmSeq = #{mmSeq}
	</select>
	<!-- 	
	<select id="memberPhoneList" resultMap="resultMapObj">
		SELECT
			a.
		FROM member_phone
		WHERE 1=1
	</select>
	 -->
	<insert id="insert">
		INSERT INTO member (
			mmName
			,mmNickname
			,mmEmail
			,mmPw
			,mmBod
			,mmGender
			,mmZip
			,mmAddress1
			,mmAddress2
			,mmRank
			,mmJob
			,mmInterest
		)
		VALUES (
			#{mmName}
			,#{mmNickname}
			,#{mmEmail}
			,#{mmPw}
			,#{mmBod}
			,#{mmGender}
			,#{mmZip}
			,#{mmAddress1}
			,#{mmAddress2}
			,#{mmRank}
			,#{mmJob}
			,#{mmInterest}
		)
			<selectKey resultType="String" keyProperty="mmSeq" order="AFTER">
				SELECT last_insert_id()
			</selectKey>
	</insert>
	
	<update id="update">
		UPDATE member
		SET
			mmName = #{mmName}
			,mmNickname = #{mmNickname}
			,mmEmail = #{mmEmail}
			,mmPw = #{mmPw}
			,mmBod = #{mmBod}
			,mmGender = #{mmGender}
			,mmZip = #{mmZip}
			,mmAddress1 = #{mmAddress1}
			,mmAddress2 = #{mmAddress2}
			,mmRank = #{mmRank}
			,mmJob = #{mmJob}
			,mmInterest = #{mmInterest}
		WHERE
			mmSeq = #{mmSeq}
	</update>
	
	<update id="uelete">
		UPDATE member
		SET
			mmDelNy = 1
		WHERE mmSeq = #{mmSeq}
	</update>
	
	<delete id="delete">
		DELETE FROM member WHERE mmSeq = #{mmSeq}
	</delete>
	
	
	<!-- 회원가입 -->
	<insert id="memberRegC">
		INSERT INTO member (
			mmEmail
			,mmPw
			,mmBod
			,mmGender
			,mmZip
			,mmAddress1
			,mmAddress2
			,mmJob
			,mmInterest
		)
		VALUES(
			#{mmEmail}
			,#{mmPw}
			,#{mmBod}
			,#{mmGender}
			,#{mmZip}
			,#{mmAddress1}
			,#{mmAddress2}
			,#{mmJob}
			,#{mmInterest}
		)
		<selectKey resultType="String" keyProperty="mmSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<insert id="memberRegPhoneC">
		INSERT INTO member_phone (
			member_mmSeq
			,mmpPhoneNumber
			,mmpDiv
			,mmpDefaultNy
		)
		VALUES(
			#{mmSeq}
			,#{mmpPhoneNumber}
			,98
			,1
		)
		<selectKey resultType="String" keyProperty="mmSeq" order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>
	
	<!-- Email 확인 -->
	<select id="selectOneIdCheck" resultType="Integer">
		SELECT COUNT(*)
		FROM member 
		WHERE 1=1 
		AND mmEmail = #{mmEmail}
	</select>
	
	<!-- 이메일 찾기 -->
	<select id="findEmail" resultMap="resultMapObj">
		SELECT
			a.mmEmail
		FROM member a
		JOIN member_phone b on a.mmSeq = b.member_mmSeq
		WHERE 1=1
			AND mmName = #{mmName}
			AND mmpPhoneNumber = #{mmpPhoneNumber}
	</select>
	
	<select id="findEmailCheck" resultType="Integer">
		SELECT COUNT(*)
		FROM member
		JOIN member_phone b on a.mmSeq = b.member_mmSeq 
		WHERE 1=1 
			AND mmName = #{mmName}
			AND mmpPhoneNumber = #{mmpPhoneNumber}
	</select>
	
	<!-- 암호화 -->
	<select id="selectOneId" resultMap="resultMapObj">
		SELECT
			a.mmSeq
			,a.mmEmail
		FROM
			member a
		WHERE 1=1
			AND a.mmEmail = #{mmEmail}
	</select>
	
	<select id="selectOneLogin" resultMap="resultMapObj">
		SELECT
			a.mmSeq
			,a.mmEmail
			,a.mmName
			,a.mmRank
		FROM
			member a
		WHERE 1=1
			AND a.mmEmail = #{mmEmail}
			<if test="mmPw != null and !mmPw.equals('')">AND a.mmPw = #{mmPw}</if>
	</select>
	
	<!-- 비밀번호 확인 -->
	<select id="selectOnePwCheck" resultType="Integer">
		SELECT 
			COUNT(*)
		FROM member 
		WHERE 1=1 
			AND mmPw = #{mmPw} 
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="pwChange">
		UPDATE member
		SET
			mmPw = #{mmPw}
		WHERE 1=1
			AND mmSeq = #{mmSeq}
	</update>
	
	<!-- 마이페이지(View) -->
	<select id="selectOneView" resultMap="resultMapObj">
			SELECT
				a.mmNickname
				,a.mmEmail
				,a.mmName
				,a.mmBod
				,b.mmpPhoneNumber
				,a.mmGender
				,a.mmZip
				,a.mmAddress1
				,a.mmAddress2
				,a.mmJob
				,a.mmInterest
			FROM member a
			JOIN member_phone b on a.mmSeq = b.member_mmSeq
			WHERE 1=1
				AND mmSeq = #{sessSeq}
				AND mmpDiv = 98
	</select>
	

</mapper>